# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
    build:
        docker:
            - image: circleci/php:7.2-cli-node-browsers
            - image: circleci/mysql:5.7.18

        environment:
            - MYSQL_DATABASE=circle_test
            - MYSQL_USER=root
            - MYSQL_PASSWORD=
            - MYSQL_ALLOW_EMPTY_PASSWORD=true
            - APP_ENV=testing
            - APP_DEBUG=true
            - APP_LOG_LEVEL=debug
            - APP_URL=http://127.0.0.1:8000
            - DB_CONNECTION=mysql
            - DB_HOST=127.0.0.1
            - DB_PORT=3306
            - DB_DATABASE=circle_test
            - DB_USERNAME=root
            - DB_PASSWORD=

        steps:
            - checkout
            - run:
                name: "Check Docker"
                command: echo "Hi"

            - run:
                name: Install PHP extensions
                command: sudo docker-php-ext-install pdo_mysql zip

            - run:
                name: "Check Composer"
                command: composer --version

            - run:
                name: "Check Composer"
                command: npm --version

            - run:
                name: "Check Artisan CLI"
                command: php artisan list

            - run:
                name: "Install NPM packages"
                command: npm install --only=dev

            - run:
                name: "Install Composer dependencies"
                command: composer install -n --prefer-dist --ignore-platform-reqs

            - run:
                name: "Set Up Laravel"
                command: |
                    rm .env.testing -f
                    cp .env.circle .env
                    cp .env.circle .env.testing
                    php artisan key:generate
                    php artisan jwt:secret

            - run:
                name: Serve Application
                background: true
                command: php artisan serve

            # - run:
            #     name: Start Chrome Driver
            #     command: chromedriver
            #     background: true

            # - run:
            #     name: "Run Dusk Tests"
            #     command: |
            #         php artisan migrate:fresh
            #         php artisan dusk &>> storage/logs/dusk.log

            - run:
                name: "Run Linter"
                command: npm run lint

            - run:
                name: "Run PHPUnit Tests"
                command: npm run test

            - store_artifacts:
                path: tests/Browser/screenshots

            - store_artifacts:
                path: storage/logs/laravel.log

            - store_artifacts:
                path: storage/logs/dusk.log
